{"abi":[{"constant":false,"inputs":[{"name":"benefactors","type":"address[]"},{"name":"kind","type":"uint16[]"}],"name":"reward","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"","contractName":"IBlockReward","deployedBytecode":"","source":"pragma solidity ^0.5.0;\n\n\n/// @title BlockReward contract interface\n/// @dev This interface must be implemented by a system contract that implements the\n/// reward logic\ninterface IBlockReward {\n\n    /// @notice Produces rewards for the given benefactors,\n    /// with corresponding reward codes\n    /// @dev Should only be callable by `SYSTEM_ADDRESS`\n    /// @param benefactors The list of addresses who can be rewarded\n    /// @param kind The corresponding list of benefactor types\n    /// @return The list of addresses to be rewarded and the corresponding list of reward amounts\n    function reward(address[] calldata benefactors, uint16[] calldata kind)\n        external\n        returns (address[] memory, uint256[] memory);\n}\n","networks":"{}"}