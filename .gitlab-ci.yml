stages:
  - build
  - test
  - package

build-dotnet:
  stage: build
  tags:
    - short-jobs
  image: microsoft/dotnet:2.2-sdk
  script:
    - dotnet restore
    - dotnet publish -c Release -o build
  artifacts:
    untracked: false
    paths:
      - src/build/

test-dotnet:
  stage: test
  tags:
    - short-jobs
  image: docker.slock.it/build-images/dotnet-and-node:latest
  variables:
    TEST_RPC: http://localhost:8545
  script:
    - /prepare.sh
    - export PATH="$PATH:/root/.dotnet/tools"
    - cd contract-prepare
    - npm install -g typescript
    - npm install
    - npm install
    - npm run start-ganache > /dev/null 2>&1 &
    - sleep 5
    - npm run deploy-and-prime
    - cd ..
    - dotnet restore
    - dotnet build
    - dotnet test /p:CollectCoverage=true /p:Include='[src*]*' /p:CoverletOutputFormat=\"opencover,lcov\" /p:CoverletOutput=../lcov --logger "trx;LogFileName=TestResults.trx"
    - trx2junit tests/TestResults/TestResults.trx
  artifacts:
    reports:
      junit: tests/TestResults/TestResults.xml

package-docker:
  stage: package
  image: docker
  tags:
    - short-jobs
  dependencies:
    - build-dotnet
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME  .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME energyweb/nodecontrol:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME energyweb/nodecontrol:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:latest
    - echo "$SECRET_EWF_DOCKER" > ~/.docker/config.json
    - docker push energyweb/nodecontrol:latest
    - docker push energyweb/nodecontrol:$CI_COMMIT_REF_NAME


